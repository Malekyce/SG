# aip.py
import streamlit as st
import pandas as pd
import numpy as np

# Simulated energy demand data (for demonstration purposes)
def generate_energy_demand():
    hours = np.arange(24)
    demand = np.random.randint(100, 500, size=24)  # Random demand values
    return pd.DataFrame({"Hour": hours, "Demand (MW)": demand})

def main():
    st.title("AI-powered Smart Grid Management")
    st.markdown("Optimizing energy distribution for a sustainable future")

    # Load energy demand data
    energy_demand_df = generate_energy_demand()

    # User input for real-time optimization
    user_input = st.slider("Adjust Demand (MW)", min_value=0, max_value=1000, value=500)

    # Predicted demand (simple linear model)
    predicted_demand = user_input * 0.9  # Placeholder prediction (adjust as needed)

    st.subheader("Real-Time Energy Distribution")
    st.markdown(f"Predicted Demand: **{predicted_demand:.2f} MW**")

    # Display energy demand chart
    st.subheader("Hourly Energy Demand")
    st.line_chart(energy_demand_df.set_index("Hour"))

    # Renewable energy integration (placeholder)
    st.subheader("Renewable Energy Sources")
    st.markdown("Solar panels and wind turbines seamlessly contribute to the grid.")

    # User input details table
    st.subheader("User Input Details")
    user_details = pd.DataFrame({"Parameter": ["Energy Demand", "Solar Energy Usage", "Wind Energy Usage"],
                                 "Value": [user_input, 200, 100]})
    st.table(user_details)

    # Scenario example
    st.subheader("Scenario Example: Solar Energy Storage")
    st.markdown("During the day, excess solar energy is generated by rooftop panels.")
    st.markdown("This surplus energy is stored in batteries.")
    st.markdown("In the evening, when demand peaks, the stored solar energy is used, reducing reliance on the grid.")

    st.markdown("---")
    st.markdown("This is an advanced example. In practice, use real data and more sophisticated models for smart grid management.")

if __name__ == "__main__":
    main()
